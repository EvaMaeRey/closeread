/* global layout styles */

.cr-section {
  display: grid;
  grid-template-rows: 1fr;

  .narrative-col {
    grid-row: 1;

    .narrative {
      padding-block: 45svh;
      padding-inline: 1em;

      p {
        margin-bottom: 0;
      }
    }
  }

  .sticky-col {
    grid-row: 1;

    // using a grid to stack sticky elements on top of each other to then
    // transition through (based on reveal's .r-stack)
    .sticky-col-stack {
      display: grid;
      height: 100dvh;
      position: sticky;
      overflow: hidden;
      top: 0;

      .sticky {
        grid-area: 1 / 1;
        margin: auto;

        // to be overruled when it is the active element
        opacity: 0;

        transition:
          opacity linear 0.5s,
          color 1s linear,
          transform 1s ease-in-out,
          transform-origin 1s ease-in-out,
          font-size 1s ease-in-out;
      }

      // show active elements (this class is applied by scrollama
      .cr-active {
        opacity: 1;
      }
    }
  }
}

/* mobile sizing (bootstrap: xs) is always overlay-center */
@media (max-width: 575.98px) {
  body.overlay-center {
    .cr-layout {
      grid-template-columns: 1fr;
      
      .narrative-col {
        grid-column: 1;
        z-index: 1;
        margin-inline: 0.5em;
      }
  
      .sticky-col {
        grid-column: 1;
      }
    }
  }
}

// layouts for wider-than-mobile sizing

// overlay layouts use one column...
.overlay-left,
.overlay-center,
.overlay-right
{
  grid-template-columns: 1fr;

  .narrative-col {
    grid-column: 1;
    z-index: 1;
  }

  .sticky-col {
    grid-column: 1;
  }
}

// ... with inline margins set for narrative content depending on side
.overlay-left {
  .narrative-col {
    margin-inline-start: 5%;
    margin-inline-end: 65%;
  }
}
.overlay-center {
  .narrative-col {
    margin-inline: auto;
  }
}
.overlay-right {
  .narrative-col {
    margin-inline-start: 65%;
    margin-inline-end: 5%;
  }
}


// sidebar layouts use two columns
.sidebar-left {
  grid-template-columns: 1fr 2fr;

  .narrative-col {
    grid-column: 1;
    margin-inline: 0;
  }

  .sticky-col {
    grid-column: 2;
  }
}
.sidebar-right {
  grid-template-columns: 2fr 1fr;

  .narrative-col {
    grid-column: 2;
    margin-inline: 0;
  }

  .sticky-col {
    grid-column: 1;
  }
}

/* poem styles */

.cr-poem {

  font-family: Iowan Old Style, Apple Garamond, Baskerville, Times New Roman, Droid Serif, Times, Source Serif Pro, serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
  
  /* need large font to stop safari text blurriness, but max-height to stop
   other stickies from being pushed down by pre-scaled poem size */
  max-height: 100dvh; 
  font-size: 300%;

  white-space: pre;
  line-height: 1em;
  
  // transform transition is applied along with all stickies
  transform-origin: center center;

  // fade the rest of the poem out when there's a highlight active
  &.cr-hl-within {
    color: rgba(0, 0, 0, 0.4);
  }

  .cr-hl {
    color: rgba(0, 0, 0, 1);
  }
}

.cr-poem2 {

  font-family: Iowan Old Style, Apple Garamond, Baskerville, Times New Roman, Droid Serif, Times, Source Serif Pro, serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
  
  // size the poem to fit the screen
  max-height: 100svh;
  max-width: 100svh;
  
  // maybe this can be overridden with lua
  font-size: 2.75cqmin;

  white-space: pre;
  line-height: 1em;
  
  // transform transition is applied along with all stickies
  transform-origin: center center;

  // fade the rest of the poem out when there's a highlight active
  &.cr-hl-within {
    color: rgba(0, 0, 0, 0.4);
    // when there's a highlight, we only want to scale based on width!
    font-size: 2.75cqi;
  }

  .cr-hl {
    color: rgba(0, 0, 0, 1);
  }
}


/* debug styles */

body.cr-debug {
  
  // give stickies borders
  .cr-poem {
    background-color: #ffff0099;
    border: 1px solid orange;
  }
  
  // make stickies slightly see-through
  [id^="cr-"] {
    opacity: 0.8;
  }

  // sidebar content and scroll zone debug styles
  .sidebar-col > * {
    background: rgba(255, 255, 0, 0.5);
    border: 1px solid rgba(255, 166, 0, 0.5);

    > * {
      background: rgba(0, 208, 255, 0.5);
      border: 1px solid rgba(0, 115, 255, 0.5);
      border-radius: 5px;
    }    
  }

}

/* remove header option */

body.cr-removeheaderspace {
  #quarto-content {
    main#quarto-document-content {
      padding-top: 0;
      margin-top: 0;
  
      .quarto-title-block {
        display: none;
      }
    }
  }

}