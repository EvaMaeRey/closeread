/*-- scss:defaults --*/

/* TODO: Customize html appearance by setting SCSS variables */
/* See https://quarto.org/docs/output-formats/html-themes.html#theme-options */

/*-- scss:rules --*/

/* TODO: Provide custom CSS rules */

.columns.cr-sidebar {

  display: flex;
  flex-direction: row;
  column-gap: 10%;
  
  // put the sticky content first if we added cr-reverse
  &.cr-reverse {
    flex-direction: row-reverse;
  }

  // vertical space around sidebar elements
  // (markdown headings create sections of content that we need to account for)
  .column.sidebar_col {
    & > *:not(section),
    section > * { 
      padding-block-start: 20svh;
      padding-block-end: 20svh;
      vertical-align: middle;
    }
  }

  // sticky positioning
  .column.sticky_col {
    padding: 20px;
    align-self: flex-start;
    position: sticky;
    top: 30svh;

    // using a grid to stack sticky elements on top of each other to then
    // transition through (based on reveal's .r-stack)
    .sticky_col_stack {
      display: grid;

      [data-cr-id] {
        grid-area: 1 / 1;
        margin: auto;
        // opacity: 0.5;     // lowering opacity for debug purposes

        // to be overruled when it is the active element
        opacity: 0;
        transition: opacity linear 0.5s;

        
      }

      // show active elements (this class is applied by scrollama
      .cr-active {
        opacity: 1;
      }
      
    }
  }
}

/* mobile (overlay) view */

@include media-breakpoint-down(lg) { 
  .columns.cr-sidebar {
    flex-direction: column-reverse;

    .column.sidebar_col {
      width: 100% !important;
      padding-inline: 7.5%;
      align-self: center;
      z-index: 1;


      /* wip - this is supposed to target our narrative blocks to make them readable over the sticky content, but since non-step narrative blocks (ie. bare content) also gets spaced, this breaks the spacing. we may need to wrap other blocks too, not just the steps. */
      & > *:not(section, .cr-crossfade),
      section > *:not(.cr-crossfade),
      .cr-crossfade > * {
        padding: 10px;
        background-color: #fafafabb;
        max-width: 90%;
        margin-inline: auto;
      }
    }

    .column.sticky_col {
      width: 100% !important;
      align-self: center;
    }
  }
 }

// debug
.cr-debug .cr-crossfade {
  background-color: #ffff0099;
  border: 1px solid orange;
}
